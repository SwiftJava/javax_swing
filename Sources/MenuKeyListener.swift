
import java_swift
import java_util

/// generated by: genswift.java 'java/lang|java/util|java/sql|java/awt|javax/swing' ///

/// interface javax.swing.event.MenuKeyListener ///

public protocol MenuKeyListener: java_util.EventListener {

    /// public abstract void javax.swing.event.MenuKeyListener.menuKeyPressed(javax.swing.event.MenuKeyEvent)

    func menuKeyPressed( e: MenuKeyEvent? )

    /// public abstract void javax.swing.event.MenuKeyListener.menuKeyReleased(javax.swing.event.MenuKeyEvent)

    func menuKeyReleased( e: MenuKeyEvent? )

    /// public abstract void javax.swing.event.MenuKeyListener.menuKeyTyped(javax.swing.event.MenuKeyEvent)

    func menuKeyTyped( e: MenuKeyEvent? )

}


open class MenuKeyListenerForward: java_util.EventListenerForward, MenuKeyListener {

    private static var MenuKeyListenerJNIClass: jclass?

    /// public abstract void javax.swing.event.MenuKeyListener.menuKeyPressed(javax.swing.event.MenuKeyEvent)

    private static var menuKeyPressed_MethodID_4: jmethodID?

    open func menuKeyPressed( e: MenuKeyEvent? ) {
        var __locals = [jobject]()
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        __args[0] = JNIType.toJava( value: e, locals: &__locals )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "menuKeyPressed", methodSig: "(Ljavax/swing/event/MenuKeyEvent;)V", methodCache: &MenuKeyListenerForward.menuKeyPressed_MethodID_4, args: &__args, locals: &__locals )
    }

    open func menuKeyPressed( _ _e: MenuKeyEvent? ) {
        menuKeyPressed( e: _e )
    }

    /// public abstract void javax.swing.event.MenuKeyListener.menuKeyReleased(javax.swing.event.MenuKeyEvent)

    private static var menuKeyReleased_MethodID_5: jmethodID?

    open func menuKeyReleased( e: MenuKeyEvent? ) {
        var __locals = [jobject]()
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        __args[0] = JNIType.toJava( value: e, locals: &__locals )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "menuKeyReleased", methodSig: "(Ljavax/swing/event/MenuKeyEvent;)V", methodCache: &MenuKeyListenerForward.menuKeyReleased_MethodID_5, args: &__args, locals: &__locals )
    }

    open func menuKeyReleased( _ _e: MenuKeyEvent? ) {
        menuKeyReleased( e: _e )
    }

    /// public abstract void javax.swing.event.MenuKeyListener.menuKeyTyped(javax.swing.event.MenuKeyEvent)

    private static var menuKeyTyped_MethodID_6: jmethodID?

    open func menuKeyTyped( e: MenuKeyEvent? ) {
        var __locals = [jobject]()
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        __args[0] = JNIType.toJava( value: e, locals: &__locals )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "menuKeyTyped", methodSig: "(Ljavax/swing/event/MenuKeyEvent;)V", methodCache: &MenuKeyListenerForward.menuKeyTyped_MethodID_6, args: &__args, locals: &__locals )
    }

    open func menuKeyTyped( _ _e: MenuKeyEvent? ) {
        menuKeyTyped( e: _e )
    }

}

private typealias MenuKeyListener_menuKeyPressed_0_type = @convention(c) ( _: UnsafeMutablePointer<JNIEnv?>, _: jobject?, _: jlong, _: jobject? ) -> ()

private func MenuKeyListener_menuKeyPressed_0( _ __env: UnsafeMutablePointer<JNIEnv?>, _ __this: jobject?, _ __swiftObject: jlong, _ e: jobject? ) -> () {
    MenuKeyListenerLocal_.swiftObject( jniEnv: __env, javaObject: __this, swiftObject: __swiftObject ).menuKeyPressed( e: e != nil ? MenuKeyEvent( javaObject: e ) : nil )
}

private typealias MenuKeyListener_menuKeyReleased_1_type = @convention(c) ( _: UnsafeMutablePointer<JNIEnv?>, _: jobject?, _: jlong, _: jobject? ) -> ()

private func MenuKeyListener_menuKeyReleased_1( _ __env: UnsafeMutablePointer<JNIEnv?>, _ __this: jobject?, _ __swiftObject: jlong, _ e: jobject? ) -> () {
    MenuKeyListenerLocal_.swiftObject( jniEnv: __env, javaObject: __this, swiftObject: __swiftObject ).menuKeyReleased( e: e != nil ? MenuKeyEvent( javaObject: e ) : nil )
}

private typealias MenuKeyListener_menuKeyTyped_2_type = @convention(c) ( _: UnsafeMutablePointer<JNIEnv?>, _: jobject?, _: jlong, _: jobject? ) -> ()

private func MenuKeyListener_menuKeyTyped_2( _ __env: UnsafeMutablePointer<JNIEnv?>, _ __this: jobject?, _ __swiftObject: jlong, _ e: jobject? ) -> () {
    MenuKeyListenerLocal_.swiftObject( jniEnv: __env, javaObject: __this, swiftObject: __swiftObject ).menuKeyTyped( e: e != nil ? MenuKeyEvent( javaObject: e ) : nil )
}

fileprivate class MenuKeyListenerLocal_: JNILocalProxy<MenuKeyListener, Any> {

    fileprivate static let _proxyClass: jclass = {
        var natives = [JNINativeMethod]()

        let MenuKeyListener_menuKeyPressed_0_thunk: MenuKeyListener_menuKeyPressed_0_type = MenuKeyListener_menuKeyPressed_0
        natives.append( JNINativeMethod( name: strdup("__menuKeyPressed"), signature: strdup("(JLjavax/swing/event/MenuKeyEvent;)V"), fnPtr: unsafeBitCast( MenuKeyListener_menuKeyPressed_0_thunk, to: UnsafeMutableRawPointer.self ) ) )

        let MenuKeyListener_menuKeyReleased_1_thunk: MenuKeyListener_menuKeyReleased_1_type = MenuKeyListener_menuKeyReleased_1
        natives.append( JNINativeMethod( name: strdup("__menuKeyReleased"), signature: strdup("(JLjavax/swing/event/MenuKeyEvent;)V"), fnPtr: unsafeBitCast( MenuKeyListener_menuKeyReleased_1_thunk, to: UnsafeMutableRawPointer.self ) ) )

        let MenuKeyListener_menuKeyTyped_2_thunk: MenuKeyListener_menuKeyTyped_2_type = MenuKeyListener_menuKeyTyped_2
        natives.append( JNINativeMethod( name: strdup("__menuKeyTyped"), signature: strdup("(JLjavax/swing/event/MenuKeyEvent;)V"), fnPtr: unsafeBitCast( MenuKeyListener_menuKeyTyped_2_thunk, to: UnsafeMutableRawPointer.self ) ) )

        natives.append( JNINativeMethod( name: strdup("__finalize"), signature: strdup("(J)V"), fnPtr: unsafeBitCast( JNIReleasableProxy__finalize_thunk, to: UnsafeMutableRawPointer.self ) ) )

        let clazz = JNI.FindClass( proxyClassName() )
        natives.withUnsafeBufferPointer {
            nativesPtr in
            if JNI.api.RegisterNatives( JNI.env, clazz, nativesPtr.baseAddress, jint(nativesPtr.count) ) != jint(JNI_OK) {
                JNI.report( "Unable to register java natives" )
            }
        }

        defer { JNI.DeleteLocalRef( clazz ) }
        return JNI.api.NewGlobalRef( JNI.env, clazz )!
    }()

    override open class func proxyClassName() -> String { return "org/swiftjava/javax_swing/MenuKeyListenerProxy" }
    override open class func proxyClass() -> jclass? { return _proxyClass }

}

extension MenuKeyListener {

    public func localJavaObject( _ locals: UnsafeMutablePointer<[jobject]> ) -> jobject? {
        return MenuKeyListenerLocal_( owned: self, proto: self ).localJavaObject( locals )
    }

}

open class MenuKeyListenerBase: MenuKeyListener {

    public init() {}

    /// public abstract void javax.swing.event.MenuKeyListener.menuKeyPressed(javax.swing.event.MenuKeyEvent)

    open func menuKeyPressed( e: MenuKeyEvent? ) /**/ {
    }


    /// public abstract void javax.swing.event.MenuKeyListener.menuKeyReleased(javax.swing.event.MenuKeyEvent)

    open func menuKeyReleased( e: MenuKeyEvent? ) /**/ {
    }


    /// public abstract void javax.swing.event.MenuKeyListener.menuKeyTyped(javax.swing.event.MenuKeyEvent)

    open func menuKeyTyped( e: MenuKeyEvent? ) /**/ {
    }


}
