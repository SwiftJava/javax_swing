
import java_swift
import java_awt

/// generated by: genswift.java 'java/lang|java/util|java/sql|java/awt|javax/swing' ///

/// interface javax.swing.Icon ///

public protocol Icon: JavaProtocol {

    /// public abstract int javax.swing.Icon.getIconHeight()

    func getIconHeight() -> Int

    /// public abstract int javax.swing.Icon.getIconWidth()

    func getIconWidth() -> Int

    /// public abstract void javax.swing.Icon.paintIcon(java.awt.Component,java.awt.Graphics,int,int)

    func paintIcon( c: java_awt.Component?, g: java_awt.Graphics?, x: Int, y: Int )

}


open class IconForward: JNIObjectForward, Icon {

    private static var IconJNIClass: jclass?

    /// public abstract int javax.swing.Icon.getIconHeight()

    private static var getIconHeight_MethodID_4: jmethodID?

    open func getIconHeight() -> Int {
        var __locals = [jobject]()
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        let __return = JNIMethod.CallIntMethod( object: javaObject, methodName: "getIconHeight", methodSig: "()I", methodCache: &IconForward.getIconHeight_MethodID_4, args: &__args, locals: &__locals )
        return Int(__return)
    }


    /// public abstract int javax.swing.Icon.getIconWidth()

    private static var getIconWidth_MethodID_5: jmethodID?

    open func getIconWidth() -> Int {
        var __locals = [jobject]()
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        let __return = JNIMethod.CallIntMethod( object: javaObject, methodName: "getIconWidth", methodSig: "()I", methodCache: &IconForward.getIconWidth_MethodID_5, args: &__args, locals: &__locals )
        return Int(__return)
    }


    /// public abstract void javax.swing.Icon.paintIcon(java.awt.Component,java.awt.Graphics,int,int)

    private static var paintIcon_MethodID_6: jmethodID?

    open func paintIcon( c: java_awt.Component?, g: java_awt.Graphics?, x: Int, y: Int ) {
        var __locals = [jobject]()
        var __args = [jvalue]( repeating: jvalue(), count: 4 )
        __args[0] = JNIType.toJava( value: c, locals: &__locals )
        __args[1] = JNIType.toJava( value: g, locals: &__locals )
        __args[2] = jvalue( i: jint(x) )
        __args[3] = jvalue( i: jint(y) )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "paintIcon", methodSig: "(Ljava/awt/Component;Ljava/awt/Graphics;II)V", methodCache: &IconForward.paintIcon_MethodID_6, args: &__args, locals: &__locals )
    }

    open func paintIcon( _ _c: java_awt.Component?, _ _g: java_awt.Graphics?, _ _x: Int, _ _y: Int ) {
        paintIcon( c: _c, g: _g, x: _x, y: _y )
    }

}

