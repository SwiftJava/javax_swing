
import java_swift
import java_awt

/// generated by: genswift.java 'java/lang|java/util|java/sql|java/awt|javax/swing' ///

/// class javax.swing.event.MenuDragMouseEvent ///

open class MenuDragMouseEvent: java_awt.MouseEvent {

    public convenience init?( casting object: java_swift.JavaObject, _ file: StaticString = #file, _ line: Int = #line ) {
        self.init( javaObject: nil )
        object.withJavaObject {
            self.javaObject = $0
        }
    }

    private static var MenuDragMouseEventJNIClass: jclass?

    /// private javax.swing.MenuSelectionManager javax.swing.event.MenuDragMouseEvent.manager

    /// private javax.swing.MenuElement[] javax.swing.event.MenuDragMouseEvent.path

    /// public static final int java.awt.event.MouseEvent.BUTTON1

    // Skipping field: false true false false false false 

    /// public static final int java.awt.event.MouseEvent.BUTTON2

    // Skipping field: false true false false false false 

    /// public static final int java.awt.event.MouseEvent.BUTTON3

    // Skipping field: false true false false false false 

    /// public static final int java.awt.event.MouseEvent.MOUSE_CLICKED

    // Skipping field: false true false false false false 

    /// public static final int java.awt.event.MouseEvent.MOUSE_DRAGGED

    // Skipping field: false true false false false false 

    /// public static final int java.awt.event.MouseEvent.MOUSE_ENTERED

    // Skipping field: false true false false false false 

    /// public static final int java.awt.event.MouseEvent.MOUSE_EXITED

    // Skipping field: false true false false false false 

    /// public static final int java.awt.event.MouseEvent.MOUSE_FIRST

    // Skipping field: false true false false false false 

    /// public static final int java.awt.event.MouseEvent.MOUSE_LAST

    // Skipping field: false true false false false false 

    /// public static final int java.awt.event.MouseEvent.MOUSE_MOVED

    // Skipping field: false true false false false false 

    /// public static final int java.awt.event.MouseEvent.MOUSE_PRESSED

    // Skipping field: false true false false false false 

    /// public static final int java.awt.event.MouseEvent.MOUSE_RELEASED

    // Skipping field: false true false false false false 

    /// public static final int java.awt.event.MouseEvent.MOUSE_WHEEL

    // Skipping field: false true false false false false 

    /// public static final int java.awt.event.MouseEvent.NOBUTTON

    // Skipping field: false true false false false false 

    /// private static int java.awt.event.MouseEvent.cachedNumberOfButtons

    /// private static final long java.awt.event.MouseEvent.serialVersionUID

    /// int java.awt.event.MouseEvent.button

    // Skipping field: true false false false false false 

    /// int java.awt.event.MouseEvent.clickCount

    // Skipping field: true false false false false false 

    /// boolean java.awt.event.MouseEvent.popupTrigger

    // Skipping field: true false false false false false 

    /// private transient boolean java.awt.event.MouseEvent.shouldExcludeButtonFromExtModifiers

    /// int java.awt.event.MouseEvent.x

    // Skipping field: true false false false false false 

    /// private int java.awt.event.MouseEvent.xAbs

    /// int java.awt.event.MouseEvent.y

    // Skipping field: true false false false false false 

    /// private int java.awt.event.MouseEvent.yAbs

    /// public static final int java.awt.event.InputEvent.ALT_DOWN_MASK

    // Skipping field: false true false false false false 

    /// public static final int java.awt.event.InputEvent.ALT_GRAPH_DOWN_MASK

    // Skipping field: false true false false false false 

    /// public static final int java.awt.event.InputEvent.ALT_GRAPH_MASK

    // Skipping field: false true false false false false 

    /// public static final int java.awt.event.InputEvent.ALT_MASK

    // Skipping field: false true false false false false 

    /// public static final int java.awt.event.InputEvent.BUTTON1_DOWN_MASK

    // Skipping field: false true false false false false 

    /// public static final int java.awt.event.InputEvent.BUTTON1_MASK

    // Skipping field: false true false false false false 

    /// public static final int java.awt.event.InputEvent.BUTTON2_DOWN_MASK

    // Skipping field: false true false false false false 

    /// public static final int java.awt.event.InputEvent.BUTTON2_MASK

    // Skipping field: false true false false false false 

    /// public static final int java.awt.event.InputEvent.BUTTON3_DOWN_MASK

    // Skipping field: false true false false false false 

    /// public static final int java.awt.event.InputEvent.BUTTON3_MASK

    // Skipping field: false true false false false false 

    /// private static final int[] java.awt.event.InputEvent.BUTTON_DOWN_MASK

    /// public static final int java.awt.event.InputEvent.CTRL_DOWN_MASK

    // Skipping field: false true false false false false 

    /// public static final int java.awt.event.InputEvent.CTRL_MASK

    // Skipping field: false true false false false false 

    /// static final int java.awt.event.InputEvent.FIRST_HIGH_BIT

    // Skipping field: true false false false false false 

    /// static final int java.awt.event.InputEvent.HIGH_MODIFIERS

    // Skipping field: true false false false false false 

    /// static final int java.awt.event.InputEvent.JDK_1_3_MODIFIERS

    // Skipping field: true false false false false false 

    /// public static final int java.awt.event.InputEvent.META_DOWN_MASK

    // Skipping field: false true false false false false 

    /// public static final int java.awt.event.InputEvent.META_MASK

    // Skipping field: false true false false false false 

    /// public static final int java.awt.event.InputEvent.SHIFT_DOWN_MASK

    // Skipping field: false true false false false false 

    /// public static final int java.awt.event.InputEvent.SHIFT_MASK

    // Skipping field: false true false false false false 

    /// private static final sun.util.logging.PlatformLogger java.awt.event.InputEvent.logger

    /// static final long java.awt.event.InputEvent.serialVersionUID

    // Skipping field: true true false false false false 

    /// private transient boolean java.awt.event.InputEvent.canAccessSystemClipboard

    /// int java.awt.event.InputEvent.modifiers

    // Skipping field: true false false false false false 

    /// long java.awt.event.InputEvent.when

    // Skipping field: true false false false false false 

    /// public static final int java.awt.event.ComponentEvent.COMPONENT_FIRST

    // Skipping field: false true false false false false 

    /// public static final int java.awt.event.ComponentEvent.COMPONENT_HIDDEN

    // Skipping field: false true false false false false 

    /// public static final int java.awt.event.ComponentEvent.COMPONENT_LAST

    // Skipping field: false true false false false false 

    /// public static final int java.awt.event.ComponentEvent.COMPONENT_MOVED

    // Skipping field: false true false false false false 

    /// public static final int java.awt.event.ComponentEvent.COMPONENT_RESIZED

    // Skipping field: false true false false false false 

    /// public static final int java.awt.event.ComponentEvent.COMPONENT_SHOWN

    // Skipping field: false true false false false false 

    /// private static final long java.awt.event.ComponentEvent.serialVersionUID

    /// public static final long java.awt.AWTEvent.ACTION_EVENT_MASK

    // Skipping field: false true false false false false 

    /// public static final long java.awt.AWTEvent.ADJUSTMENT_EVENT_MASK

    // Skipping field: false true false false false false 

    /// public static final long java.awt.AWTEvent.COMPONENT_EVENT_MASK

    // Skipping field: false true false false false false 

    /// public static final long java.awt.AWTEvent.CONTAINER_EVENT_MASK

    // Skipping field: false true false false false false 

    /// public static final long java.awt.AWTEvent.FOCUS_EVENT_MASK

    // Skipping field: false true false false false false 

    /// public static final long java.awt.AWTEvent.HIERARCHY_BOUNDS_EVENT_MASK

    // Skipping field: false true false false false false 

    /// public static final long java.awt.AWTEvent.HIERARCHY_EVENT_MASK

    // Skipping field: false true false false false false 

    /// static final long java.awt.AWTEvent.INPUT_METHODS_ENABLED_MASK

    // Skipping field: true false false false false false 

    /// public static final long java.awt.AWTEvent.INPUT_METHOD_EVENT_MASK

    // Skipping field: false true false false false false 

    /// public static final long java.awt.AWTEvent.INVOCATION_EVENT_MASK

    // Skipping field: false true false false false false 

    /// public static final long java.awt.AWTEvent.ITEM_EVENT_MASK

    // Skipping field: false true false false false false 

    /// public static final long java.awt.AWTEvent.KEY_EVENT_MASK

    // Skipping field: false true false false false false 

    /// public static final long java.awt.AWTEvent.MOUSE_EVENT_MASK

    // Skipping field: false true false false false false 

    /// public static final long java.awt.AWTEvent.MOUSE_MOTION_EVENT_MASK

    // Skipping field: false true false false false false 

    /// public static final long java.awt.AWTEvent.MOUSE_WHEEL_EVENT_MASK

    // Skipping field: false true false false false false 

    /// public static final long java.awt.AWTEvent.PAINT_EVENT_MASK

    // Skipping field: false true false false false false 

    /// public static final int java.awt.AWTEvent.RESERVED_ID_MAX

    // Skipping field: false true false false false false 

    /// public static final long java.awt.AWTEvent.TEXT_EVENT_MASK

    // Skipping field: false true false false false false 

    /// public static final long java.awt.AWTEvent.WINDOW_EVENT_MASK

    // Skipping field: false true false false false false 

    /// public static final long java.awt.AWTEvent.WINDOW_FOCUS_EVENT_MASK

    // Skipping field: false true false false false false 

    /// public static final long java.awt.AWTEvent.WINDOW_STATE_EVENT_MASK

    // Skipping field: false true false false false false 

    /// private static java.lang.reflect.Field java.awt.AWTEvent.inputEvent_CanAccessSystemClipboard_Field

    /// private static final sun.util.logging.PlatformLogger java.awt.AWTEvent.log

    /// private static final long java.awt.AWTEvent.serialVersionUID

    /// private transient volatile java.security.AccessControlContext java.awt.AWTEvent.acc

    /// private byte[] java.awt.AWTEvent.bdata

    /// protected boolean java.awt.AWTEvent.consumed

    private static var consumed_FieldID: jfieldID?

    override open var consumed: Bool {
        get {
            let __value = JNIField.GetBooleanField( fieldName: "consumed", fieldType: "Z", fieldCache: &MenuDragMouseEvent.consumed_FieldID, object: javaObject )
            return __value != jboolean(JNI_FALSE)
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = jvalue( z: jboolean(newValue ? JNI_TRUE : JNI_FALSE) )
            JNIField.SetBooleanField( fieldName: "consumed", fieldType: "Z", fieldCache: &MenuDragMouseEvent.consumed_FieldID, object: javaObject, value: __value.z, locals: &__locals )
        }
    }

    /// transient boolean java.awt.AWTEvent.focusManagerIsDispatching

    // Skipping field: true false false false false false 

    /// protected int java.awt.AWTEvent.id

    private static var id_FieldID: jfieldID?

    override open var id: Int {
        get {
            let __value = JNIField.GetIntField( fieldName: "id", fieldType: "I", fieldCache: &MenuDragMouseEvent.id_FieldID, object: javaObject )
            return Int(__value)
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = jvalue( i: jint(newValue) )
            JNIField.SetIntField( fieldName: "id", fieldType: "I", fieldCache: &MenuDragMouseEvent.id_FieldID, object: javaObject, value: __value.i, locals: &__locals )
        }
    }

    /// transient boolean java.awt.AWTEvent.isPosted

    // Skipping field: true false false false false false 

    /// private transient boolean java.awt.AWTEvent.isSystemGenerated

    /// private static final long java.util.EventObject.serialVersionUID

    /// protected transient java.lang.Object java.util.EventObject.source

    private static var source_FieldID: jfieldID?

    override open var source: java_swift.JavaObject! {
        get {
            let __value = JNIField.GetObjectField( fieldName: "source", fieldType: "Ljava/lang/Object;", fieldCache: &MenuDragMouseEvent.source_FieldID, object: javaObject )
            defer { JNI.DeleteLocalRef( __value ) }
            return __value != nil ? java_swift.JavaObject( javaObject: __value ) : nil
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = JNIType.toJava( value: newValue, locals: &__locals )
            JNIField.SetObjectField( fieldName: "source", fieldType: "Ljava/lang/Object;", fieldCache: &MenuDragMouseEvent.source_FieldID, object: javaObject, value: __value.l, locals: &__locals )
        }
    }

    /// public javax.swing.event.MenuDragMouseEvent(java.awt.Component,int,long,int,int,int,int,boolean,javax.swing.MenuElement[],javax.swing.MenuSelectionManager)

    private static var new_MethodID_1: jmethodID?

    public convenience init( source: java_awt.Component?, id: Int, when: Int64, modifiers: Int, x: Int, y: Int, clickCount: Int, popupTrigger: Bool, p: [MenuElement]?, m: MenuSelectionManager? ) {
        var __locals = [jobject]()
        var __args = [jvalue]( repeating: jvalue(), count: 10 )
        __args[0] = JNIType.toJava( value: source, locals: &__locals )
        __args[1] = jvalue( i: jint(id) )
        __args[2] = jvalue( j: when )
        __args[3] = jvalue( i: jint(modifiers) )
        __args[4] = jvalue( i: jint(x) )
        __args[5] = jvalue( i: jint(y) )
        __args[6] = jvalue( i: jint(clickCount) )
        __args[7] = jvalue( z: jboolean(popupTrigger ? JNI_TRUE : JNI_FALSE) )
        __args[8] = JNIType.toJava( value: p, locals: &__locals )
        __args[9] = JNIType.toJava( value: m, locals: &__locals )
        let __object = JNIMethod.NewObject( className: "javax/swing/event/MenuDragMouseEvent", classCache: &MenuDragMouseEvent.MenuDragMouseEventJNIClass, methodSig: "(Ljava/awt/Component;IJIIIIZ[Ljavax/swing/MenuElement;Ljavax/swing/MenuSelectionManager;)V", methodCache: &MenuDragMouseEvent.new_MethodID_1, args: &__args, locals: &__locals )
        self.init( javaObject: __object )
        JNI.DeleteLocalRef( __object )
    }

    public convenience init( _ _source: java_awt.Component?, _ _id: Int, _ _when: Int64, _ _modifiers: Int, _ _x: Int, _ _y: Int, _ _clickCount: Int, _ _popupTrigger: Bool, _ _p: [MenuElement]?, _ _m: MenuSelectionManager? ) {
        self.init( source: _source, id: _id, when: _when, modifiers: _modifiers, x: _x, y: _y, clickCount: _clickCount, popupTrigger: _popupTrigger, p: _p, m: _m )
    }

    /// public javax.swing.event.MenuDragMouseEvent(java.awt.Component,int,long,int,int,int,int,int,int,boolean,javax.swing.MenuElement[],javax.swing.MenuSelectionManager)

    private static var new_MethodID_2: jmethodID?

    public convenience init( source: java_awt.Component?, id: Int, when: Int64, modifiers: Int, x: Int, y: Int, xAbs: Int, yAbs: Int, clickCount: Int, popupTrigger: Bool, p: [MenuElement]?, m: MenuSelectionManager? ) {
        var __locals = [jobject]()
        var __args = [jvalue]( repeating: jvalue(), count: 12 )
        __args[0] = JNIType.toJava( value: source, locals: &__locals )
        __args[1] = jvalue( i: jint(id) )
        __args[2] = jvalue( j: when )
        __args[3] = jvalue( i: jint(modifiers) )
        __args[4] = jvalue( i: jint(x) )
        __args[5] = jvalue( i: jint(y) )
        __args[6] = jvalue( i: jint(xAbs) )
        __args[7] = jvalue( i: jint(yAbs) )
        __args[8] = jvalue( i: jint(clickCount) )
        __args[9] = jvalue( z: jboolean(popupTrigger ? JNI_TRUE : JNI_FALSE) )
        __args[10] = JNIType.toJava( value: p, locals: &__locals )
        __args[11] = JNIType.toJava( value: m, locals: &__locals )
        let __object = JNIMethod.NewObject( className: "javax/swing/event/MenuDragMouseEvent", classCache: &MenuDragMouseEvent.MenuDragMouseEventJNIClass, methodSig: "(Ljava/awt/Component;IJIIIIIIZ[Ljavax/swing/MenuElement;Ljavax/swing/MenuSelectionManager;)V", methodCache: &MenuDragMouseEvent.new_MethodID_2, args: &__args, locals: &__locals )
        self.init( javaObject: __object )
        JNI.DeleteLocalRef( __object )
    }

    public convenience init( _ _source: java_awt.Component?, _ _id: Int, _ _when: Int64, _ _modifiers: Int, _ _x: Int, _ _y: Int, _ _xAbs: Int, _ _yAbs: Int, _ _clickCount: Int, _ _popupTrigger: Bool, _ _p: [MenuElement]?, _ _m: MenuSelectionManager? ) {
        self.init( source: _source, id: _id, when: _when, modifiers: _modifiers, x: _x, y: _y, xAbs: _xAbs, yAbs: _yAbs, clickCount: _clickCount, popupTrigger: _popupTrigger, p: _p, m: _m )
    }

    /// public javax.swing.MenuSelectionManager javax.swing.event.MenuDragMouseEvent.getMenuSelectionManager()

    private static var getMenuSelectionManager_MethodID_3: jmethodID?

    open func getMenuSelectionManager() -> MenuSelectionManager! {
        var __locals = [jobject]()
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "getMenuSelectionManager", methodSig: "()Ljavax/swing/MenuSelectionManager;", methodCache: &MenuDragMouseEvent.getMenuSelectionManager_MethodID_3, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? MenuSelectionManager( javaObject: __return ) : nil
    }


    /// public javax.swing.MenuElement[] javax.swing.event.MenuDragMouseEvent.getPath()

    private static var getPath_MethodID_4: jmethodID?

    open func getPath() -> [MenuElement]! {
        var __locals = [jobject]()
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "getPath", methodSig: "()[Ljavax/swing/MenuElement;", methodCache: &MenuDragMouseEvent.getPath_MethodID_4, args: &__args, locals: &__locals )
        return JNIType.toSwift( type: [MenuElementForward].self, from: __return )
    }


}

